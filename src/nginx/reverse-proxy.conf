limit_req_zone $http_x_forwarded_for zone=req_limit_per_ip:10m rate=10r/m;
limit_conn_zone $http_x_forwarded_for zone=conn_limit_per_ip:10m;

############### 80
server {
 listen 80;
 access_log  off;
 error_log   off;
 server_name www.dicpuchd.in;
 return 301 https://$host$request_uri;
}


################# 443
server {
 listen 443 http2 ssl default_server;

 #############  logs
 access_log /var/log/nginx/reverse-access.log;
 error_log /var/log/nginx/reverse-error.log;

 #############SSL
 server_name     www.dicpuchd.in;
 ssl_certificate /etc/letsencrypt/live/www.dicpuchd.in/fullchain.pem;
 ssl_certificate_key /etc/letsencrypt/live/www.dicpuchd.in/privkey.pem;
 rewrite www.dicpuchd.in https://dicpuchd.in permanent;

 ################### client
 client_body_timeout 60s;
 client_header_timeout 60s;

 ################# Other attributes for security
 ssl_session_timeout 1d;
 ssl_session_cache shared:SSL:50m;
 ssl_session_tickets off;
 # ssl_dhparam /etc/nginx/ssl/letsencrypt/dicpuchd.in/dhparams.pem;
 ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
 ssl_prefer_server_ciphers on;
 
 add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload" always;
 add_header X-Content-Type-Options "nosniff" always;
 add_header X-Frame-Options "SAMEORIGIN" always;
 add_header X-Xss-Protection "1";
 # OCSP Stapling
 # fetch OCSP records from URL in ssl_certificate and cache them
 ssl_stapling on;
 ssl_stapling_verify on;
 # resolver <IP DNS resolver>;
 ssl_buffer_size 8k;

 ## rest of your config below such as php-cgi, documentroot and more ##

 location / {
    # limit_req zone=req_limit_per_ip burst=10 nodelay;
    # auth_basic "Restricted Access!";
    # auth_basic_user_file /home/ubuntu/delete.pwd;
    # auth_request off;

    # more_set_headers 'Set-Cookie: $sent_http_set_cookie; HttpOnly';

    proxy_pass https://127.0.0.1:3000;

    error_page  404  http://dic.puchd.ac.in;
    fastcgi_intercept_errors on;
    ###### this section work in nginx plus
    #auth_jwt          "API";
    #auth_jwt_key_file conf/key.jwk;
    #return /var/www/html/error.html;
 }

 location /api/v1/authenticate
 {
  proxy_pass https://127.0.0.1:3000/api/v1/authenticate;
 }

  location /api/v1/register
 {
  proxy_pass https://127.0.0.1:3000/api/v1/register;
 }

  location /api/v1/logout
 {
  proxy_pass https://127.0.0.1:3000/api/v1/logout;
 }

 location /app1socket {
    proxy_pass https://localhost:3001/socket.io/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
 }
}
